// Mocks generated by Mockito 5.4.0 from annotations
// in crypto_search/test/crypto_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:crypto_search/model/crypto/bpi.dart' as _i3;
import 'package:crypto_search/model/crypto/crypto_data.dart' as _i7;
import 'package:crypto_search/model/crypto/eur.dart' as _i4;
import 'package:crypto_search/model/crypto/time.dart' as _i2;
import 'package:crypto_search/service/crypto_service.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTime_0 extends _i1.SmartFake implements _i2.Time {
  _FakeTime_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBpi_1 extends _i1.SmartFake implements _i3.Bpi {
  _FakeBpi_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEur_2 extends _i1.SmartFake implements _i4.Eur {
  _FakeEur_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CryptoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCryptoService extends _i1.Mock implements _i5.CryptoService {
  MockCryptoService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<_i7.CryptoData?> fetchCryptoStream() => (super.noSuchMethod(
        Invocation.method(
          #fetchCryptoStream,
          [],
        ),
        returnValue: _i6.Stream<_i7.CryptoData?>.empty(),
      ) as _i6.Stream<_i7.CryptoData?>);
  @override
  _i6.Future<_i7.CryptoData?> fetchCrypto() => (super.noSuchMethod(
        Invocation.method(
          #fetchCrypto,
          [],
        ),
        returnValue: _i6.Future<_i7.CryptoData?>.value(),
      ) as _i6.Future<_i7.CryptoData?>);
  @override
  _i6.Future<List<_i3.Bpi>?> historyCrypto() => (super.noSuchMethod(
        Invocation.method(
          #historyCrypto,
          [],
        ),
        returnValue: _i6.Future<List<_i3.Bpi>?>.value(),
      ) as _i6.Future<List<_i3.Bpi>?>);
  @override
  void initDatabase() => super.noSuchMethod(
        Invocation.method(
          #initDatabase,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateRatePrice({
    required double? usd,
    required double? gbp,
    required double? eur,
    required double? uRate,
    required double? gRate,
    required double? eRate,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #updateRatePrice,
          [],
          {
            #usd: usd,
            #gbp: gbp,
            #eur: eur,
            #uRate: uRate,
            #gRate: gRate,
            #eRate: eRate,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CryptoData].
///
/// See the documentation for Mockito's code generation for more information.
class MockCryptoData extends _i1.Mock implements _i7.CryptoData {
  MockCryptoData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Time get time => (super.noSuchMethod(
        Invocation.getter(#time),
        returnValue: _FakeTime_0(
          this,
          Invocation.getter(#time),
        ),
      ) as _i2.Time);
  @override
  set time(_i2.Time? _time) => super.noSuchMethod(
        Invocation.setter(
          #time,
          _time,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get disclaimer => (super.noSuchMethod(
        Invocation.getter(#disclaimer),
        returnValue: '',
      ) as String);
  @override
  set disclaimer(String? _disclaimer) => super.noSuchMethod(
        Invocation.setter(
          #disclaimer,
          _disclaimer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get chartName => (super.noSuchMethod(
        Invocation.getter(#chartName),
        returnValue: '',
      ) as String);
  @override
  set chartName(String? _chartName) => super.noSuchMethod(
        Invocation.setter(
          #chartName,
          _chartName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Bpi get bpi => (super.noSuchMethod(
        Invocation.getter(#bpi),
        returnValue: _FakeBpi_1(
          this,
          Invocation.getter(#bpi),
        ),
      ) as _i3.Bpi);
  @override
  set bpi(_i3.Bpi? _bpi) => super.noSuchMethod(
        Invocation.setter(
          #bpi,
          _bpi,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [Bpi].
///
/// See the documentation for Mockito's code generation for more information.
class MockBpi extends _i1.Mock implements _i3.Bpi {
  MockBpi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Eur get usd => (super.noSuchMethod(
        Invocation.getter(#usd),
        returnValue: _FakeEur_2(
          this,
          Invocation.getter(#usd),
        ),
      ) as _i4.Eur);
  @override
  set usd(_i4.Eur? _usd) => super.noSuchMethod(
        Invocation.setter(
          #usd,
          _usd,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Eur get gbp => (super.noSuchMethod(
        Invocation.getter(#gbp),
        returnValue: _FakeEur_2(
          this,
          Invocation.getter(#gbp),
        ),
      ) as _i4.Eur);
  @override
  set gbp(_i4.Eur? _gbp) => super.noSuchMethod(
        Invocation.setter(
          #gbp,
          _gbp,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Eur get eur => (super.noSuchMethod(
        Invocation.getter(#eur),
        returnValue: _FakeEur_2(
          this,
          Invocation.getter(#eur),
        ),
      ) as _i4.Eur);
  @override
  set eur(_i4.Eur? _eur) => super.noSuchMethod(
        Invocation.setter(
          #eur,
          _eur,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [CryptoData].
///
/// See the documentation for Mockito's code generation for more information.
class MockCryptoDataRelaxed extends _i1.Mock implements _i7.CryptoData {
  @override
  _i2.Time get time => (super.noSuchMethod(
        Invocation.getter(#time),
        returnValue: _FakeTime_0(
          this,
          Invocation.getter(#time),
        ),
        returnValueForMissingStub: _FakeTime_0(
          this,
          Invocation.getter(#time),
        ),
      ) as _i2.Time);
  @override
  set time(_i2.Time? _time) => super.noSuchMethod(
        Invocation.setter(
          #time,
          _time,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get disclaimer => (super.noSuchMethod(
        Invocation.getter(#disclaimer),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set disclaimer(String? _disclaimer) => super.noSuchMethod(
        Invocation.setter(
          #disclaimer,
          _disclaimer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get chartName => (super.noSuchMethod(
        Invocation.getter(#chartName),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set chartName(String? _chartName) => super.noSuchMethod(
        Invocation.setter(
          #chartName,
          _chartName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Bpi get bpi => (super.noSuchMethod(
        Invocation.getter(#bpi),
        returnValue: _FakeBpi_1(
          this,
          Invocation.getter(#bpi),
        ),
        returnValueForMissingStub: _FakeBpi_1(
          this,
          Invocation.getter(#bpi),
        ),
      ) as _i3.Bpi);
  @override
  set bpi(_i3.Bpi? _bpi) => super.noSuchMethod(
        Invocation.setter(
          #bpi,
          _bpi,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
